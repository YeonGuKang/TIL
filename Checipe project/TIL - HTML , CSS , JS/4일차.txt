4일차 - JS에 대해 더 배우다

자바스크립트에서 html을 다루는 좀 더 세부적인 부분에 대해서 배워보았다.


아래 코드는 자바스크립트에서 직접 element를 만들어서 이미 존재하는 html 엘레멘트에 추가하는 코드이다.
이를 활용하면 event가 있을경우 element를 보여주게 하도록 만들 수 있다.


const toDoForm = document.querySelector(".js-toDoForm"),  // html에 존재하는 js-toDoForm의 id를 가져옴
  toDoInput = toDoForm.querySelector("input"),  // toDoForm에 input type을 가져옴
  toDoList = document.querySelector(".js-toDoList"); 
  
const TODOS_LS = "toDos"; // TODOS_LS 
const toDos = [];   // toDO list를 위한 배열을 선언해줌 (객체들을 모아놓을 배열임)


function saveToDos() {
// local저장소에 저장을한다. 로컬 저장소는 모든걸 string으로 저장해야하기에 stringify로 모든 객체 정보를 string화 한다.
  localStorage.setItem(TODOS_LS, JSON.stringify(toDos));
}


function paintToDo(text) {
  // createElement - JS에서 html의 element를 직접만드는 코드이다
  const li = document.createElement("li");  // li를 만들고
  const delBtn = document.createElement("button"); // button을 만들었다.
  const newId = toDos.length + 1; // 각자 li에 ID를 준다. li의 식별을 위해서.
  delBtn.innerText = "❌"; // 버튼에 text를 추가해줌
  const span = document.createElement("span"); // span도 만들었다.
  span.innerText = text;  // span에도 text를 추가해줌
  li.appendChild(delBtn); // li에 그 버튼을 자식으로 추가해줌
  li.appendChild(span); // 역시나 li에 span을 자식으로 추가해줌
  li.id = newId;
  toDoList.appendChild(li); // 이제 그 통합 li를 이미 html에 존재하는 toDoList에 추가해준다. 이렇게 함으로써 event가 있을경우에 html에 보여주는 element가 달라진다.
  
  //  toDo 배열에 넣을 객체를 만든다
const toDoObj = {
    text: text,
    id: newId
  };
  toDos.push(toDoObj); // toDos 배열에 방금 만든 객체를 집어 넣는다
  saveToDos();
  }
  
// submit의 event가 감지되면 
function handleSubmit(event) {
  event.preventDefault(); // 페이지가 reset되는등 자동으로 실행되는 event를 방지한다.
  const currentValue = toDoInput.value; // Input value를 저장해주고
  paintToDo(currentValue); // 그 value를 함수로 넘겨준다
  toDoInput.value = ""; // 그 뒤에 value를 초기화 해줌으로써 display되는 value를 없앤다 ( 엔터를 눌렀을 때 보여지는게 사라짐)
  
  }

// 저장한 ToDos를 불러오는 함수
function loadToDos() {
  const loadedToDos = localStorage.getItem(TODOS_LS);
  if (loadedToDos !== null) {
    const parsedToDos = JSON.parse(loadedToDos); // parse는 아까 string으로 바꾼 객체 정보를 다시 객체로 바꾼다.
    parsedToDos.forEach(function(toDo) { // forEach를 이용해 각각의 toDo 배열 요소들에 대해서 함수를 실행한다.
      paintToDo(toDo.text);
    });
  }
  
  
  function init() {
  loadToDos();
  toDoForm.addEventListener("submit", handleSubmit);
}



이번에는 math를 이용해서 내가 가지고 있는 사진을 랜던으로 보여주는 코드이다.

const body = document.querySelector("body");

const IMG_NUMBER = 3; // 이미지의 총 개수를 저장해준다

function paintImage(imgNumber) {
  const image = new Image();
  // 생성된 랜덤숫자로 랜덤한 이미지를 
  image.src = `images/${imgNumber + 1}.jpg`; // 이미지 이름은 1.jpg , 2.jpg , 3.jpg ... 이다.
  image.classList.add("bgImage");
  body.prepend(image);
}

// 랜덤한 숫자를 만들어주는 함수
function genRandom() {
// math함수를 이용하여 랜덤 값을 생성한다. floor = 버림 , random = 랜덤한 숫자생성 
  const number = Math.floor(Math.random() * IMG_NUMBER);
  return number;
}

function init() {
  const randomNumber = genRandom();
  paintImage(randomNumber);
}

init();
