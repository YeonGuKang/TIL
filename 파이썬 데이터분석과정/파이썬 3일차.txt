list indexing(인덱싱), slicing(슬라이싱)
리스트의 특정 항목을 확인하는 방법
인덱싱은 하나, 슬라이싱은 여러개
리스트의 순서를 인덱스라고 하며 0부터 시작

# 리스트 내 특정 항목의 갯수를 확인하고 싶다면?
test_list.count('테스트')

# 최대 최소 값
test_list2= [1,23,24,4,235,2351]
max(test_list2) , min(test_list2)

# 슬라이싱
# 리스트의 첫번째 항목부터 3번째 항목까지 가져오기
test_list2[0:3]

# 리스트의 4번째 항목부터 마지막 항목까지 가져오기
test_list2[3:]

# 리스트의 맨 마지막 항목 가져오기
test_list2[-1]

### 아주아주 유용하게 쓰임
# 리스트의 전체 항목 중 2의 배수 인덱스 항목가져오기
test_list2[::2]

# 리스트 내 특정항목의 인덱스 가져오기
test_list2.index(4) : 숫자 4가 현재 어디 인덱스인가?

# 리스트에 특정 항목 삭제
test_list.remove(1) : 숫자 1을 삭제한다.

# 리스트의 맨 마지막 항목 꺼내오기 (값도 꺼내면서 리스트의 마지막 항목 삭제)
test_list.pop()

# 리스트의 값 정렬 (숫자는 오름차순, 문자는 알파벳순, 한글은 가나다순)
# 역순은?
test_list2.sort()
test_list2.sort(reverse=True)

# int형 데이터가 들어가 있는 num1, num2 리스트 생성
num1=[1,2,3,4]
num2=[4,5,6,7]

# 리스트 합
num3=num1+num2 : num3는 둘을 합친 [1,2,3,4,4,5,6,7]

마찬가지로 리스트 곱은 여러번 반복해서 넣어주는 역할

# 값을 추가하면서 딕셔너리 생성
wallet = {
    'card':'신한카드',
    'cash':75000,
    'coin':{'500원':1,
            '100원':1,},
    'id':['주민등록증', '여권'],
    'licence':'운전면허증'
}

# dict의 key 값 확인
wallet.keys()

# dict의 value 값 확인
wallet.values()


# get 함수를 사용하여 접근
wallet.get('coin').get('500원')

# key값을 바로 value값 접근에 사용
wallet['coin']['500원'] 

둘 다 결과는 1